apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

buildscript {
    repositories {
    }
}
android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/io.netty.versions.properties'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

artifactory {
    contextUrl = 'https://token.jfrog.io/token/'

    resolve {
        repository {
            repoKey = 'libs-release'             // The Artifactory repository key to download from
        }
    }

    publish {
        repository {
            afterEvaluate {
                // The Artifactory repository key to publish to
                if (version.endsWith("SNAPSHOT")) {
                    repoKey = 'libs-snapshot-local'
                } else {
                    repoKey = 'public-libs-release-local'
                }
            }
            username = "${artifactory_user}"     // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            publications('mavenJava')
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    google()
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api(project(':lib')){
        exclude group: "com.google.api.grpc", module:"proto-google-common-protos"
    }
    api(group: 'io.token.rpc', name: 'tokenio-rpc-client-okhttp', version: ver.tokenRpc){
        exclude group: "com.google.api.grpc", module:"proto-google-common-protos"
    }

    implementation 'com.android.support:support-annotations:25.3.1'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.1'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

archivesBaseName = 'tokenio-' + rootProject.name

if (rootProject.name != name) {
    archivesBaseName = archivesBaseName + '-' + name
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId group
            version version
            artifactId archivesBaseName
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/${artifactId}-release.aar")

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.api.allDependencies.each { dependency ->
                    if (dependency.version != null) {
                        def artifactId = dependency.name
                        if (artifactId == 'lib') {
                            artifactId = 'tokenio-' + rootProject.name + '-lib'
                        }
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', artifactId)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }
}